// Generated by CoffeeScript 1.3.3
var Parse, Store, Q;

Q = require("q");

Parse = require("parse").Parse;

Store = (function() {

  function Store() {}

  Store.findByAttributes = function(nameValuePairs) {
    var Stores, deferred, error, name, profileQuery, success, value;
    
    deferred = Q.defer();
    
    Stores = Parse.Object.extend("Stores");
    profileQuery = new Parse.Query(Stores);
    for (name in nameValuePairs) {
      value = nameValuePairs[name];
      profileQuery.equalTo(name, value);
    }

    success = function(results) {
      return deferred.resolve(results);
    };
    error = function(err) {
      return deferred.reject(err);
    };
    
    profileQuery.find().then(success, error);
    
    return deferred.promise;
  };
   
  Store.save = function(store){

    var deferred = Q.defer();

    console.info("Saving Store".grey)

    store.save().then(
      function(store){ return deferred.resolve(store); } ,
      function(err){ return deferred.reject(err); }
    );

    return deferred.promise;
  }

  Store.create = function(attrs){
    StoreModel = Parse.Object.extend("Stores");
    var store = new StoreModel();   
    for( attr in attrs ){
      var value = attrs[attr];
      store.set(attr, value);
    }
    
    return Store.save(store);
  }

  Store.destroy = function(store){
  // Upload App Flow
    console.info("Deleting Store".yellow)

    var deferred = Q.defer();

    store.destroy().then(
      function(){ deferred.resolve() },
      function(err){ deferred.reject(err) }
    )

    return deferred.promise;
  }
    
  
  return Store;

})();

module.exports = Store;